trigger:
  branches:
    include:
    - main
  batch: True
resources:
  repositories:
  - repository: self
    type: git
    ref: main
parameters:
  - name: account
    type: string
    default: 5bd7e7ed-c091-4182-9caa-931ea7a13fe6
variables:
  USERNAME_TAG: $(UsernameTag)
  APIGatewayResourceVinylsPathPart: $(APIGatewayResourceVinylsPathPart)
  LambdaFuncUPDATEName: $(LambdaFuncUPDATEName)
  LambdaFuncDELETEName: $(LambdaFuncDELETEName)
  LambdaFuncGETName: $(LambdaFuncGETName)
  LambdaFuncGETALLName: $(LambdaFuncGETALLName)
  LambdaFuncPOSTName: $(LambdaFuncPOSTName)
  DYNAMO_DB_TABLE_NAME: $(DynamoDBTableName)
  APIName: $(APIName)
  EnvironmentName: $(EnvironmentName)
  MicroservicesS3BucketName: $(MicroservicesS3BucketName)
  DELETEMicroserviceS3BucketKey: $(DELETEMicroserviceS3BucketKey)
jobs:
- job: 'Job_1'
  displayName: Agent job 2
  pool:
      vmImage: vs2017-win2016
  variables:
    - name: cfn-template
      value: '$(System.DefaultWorkingDirectory)/VinylStoreCF.yaml'
  steps:
      - checkout: self
        clean: true
      - task: CloudFormationCreateOrUpdateStack@1
        displayName: 'Create/Update Stack: plata-marquez-alvaro-VinylStore-stack'
        inputs:
          awsCredentials: '${{ parameters.account }}'
          regionName: 'us-east-1'
          stackName: plata-marquez-alvaro-VinylStore-stack
          templateSource: 'file'
          templateFile: '$(cfn-template)' 
          roleARN: arn:aws:iam::933005959117:role/CloudFormationADRole
          templateParametersSource: "inline"
          templateParameters: |
            - ParameterKey: UsernameTag
              ParameterValue: $(USERNAME_TAG)
            - ParameterKey: APIGatewayResourceVinylsPathPart
              ParameterValue: $(APIGatewayResourceVinylsPathPart)
            - ParameterKey: LambdaFuncUPDATEName
              ParameterValue: $(LambdaFuncUPDATEName)
            - ParameterKey: LambdaFuncDELETEName
              ParameterValue: $(LambdaFuncDELETEName)
            - ParameterKey: LambdaFuncGETName
              ParameterValue: $(LambdaFuncGETName)
            - ParameterKey: LambdaFuncGETALLName
              ParameterValue: $(LambdaFuncGETALLName)
            - ParameterKey: LambdaFuncPOSTName
              ParameterValue: $(LambdaFuncPOSTName)
            - ParameterKey: DynamoDBTableName
              ParameterValue: $(DYNAMO_DB_TABLE_NAME)
            - ParameterKey: APIName
              ParameterValue: $(APIName)
            - ParameterKey: EnvironmentName
              ParameterValue: $(EnvironmentName)
            - ParameterKey: MicroservicesS3BucketName
              ParameterValue: $(MicroservicesS3BucketName)
            - ParameterKey: DELETEMicroserviceS3BucketKey
              ParameterValue: $(DELETEMicroserviceS3BucketKey)
          tags: '
          azure-devops:pipeline-id=$(System.DefinitionId)
          azure-devops:creator-email=$(Build.RequestedForEmail)
          azure-devops:repository=$(Build.Repository.Name)'
...
